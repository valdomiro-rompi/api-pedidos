spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:pedidos_db}
    username: ${DB_USERNAME:pedidos_user}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_POOL_MIN_IDLE:5}
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
  
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        generate_statistics: false
        
  sql:
    init:
      mode: never

server:
  port: ${SERVER_PORT:8080}
  tomcat:
    max-threads: ${SERVER_MAX_THREADS:200}
    min-spare-threads: ${SERVER_MIN_THREADS:10}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: ${METRICS_ENABLED:false}

logging:
  level:
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    com.example.apipedidos: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.postgresql: WARN
  file:
    name: ${LOG_FILE_PATH:./logs/api-pedidos.log}